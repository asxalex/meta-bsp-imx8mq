From a1bd2fbc77b35560016eeef444ab273ecbd11d91 Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Wed, 4 Mar 2020 14:04:43 +0200
Subject: [PATCH 39/55] cl-som-imx8: Add a fast ddr discovery way

Added a fast ddr discovery way.
Some ddrs chip allows reading the corretc mr5-8 on a non native ddr
settings. Now, try to walk through the settings array again after reading
the mr5-8 registers.

Changed env device discovery logics

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 board/compulab/cl-som-imx8/ddr/ddr.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/board/compulab/cl-som-imx8/ddr/ddr.c b/board/compulab/cl-som-imx8/ddr/ddr.c
index 1a0dc21..dc04511 100644
--- a/board/compulab/cl-som-imx8/ddr/ddr.c
+++ b/board/compulab/cl-som-imx8/ddr/ddr.c
@@ -106,6 +106,7 @@ void spl_dram_init(void)
 	unsigned int ddr_info_mrr = 0xdeadbeef;
 	unsigned int ddr_asize = 0;
 	unsigned int ddr_found = 0;
+	int reset_required = 0;
 	int i = 0, j = 0;
 
 	const struct lpddr4_desc *lpddr4_array = NULL;
@@ -163,6 +164,15 @@ void spl_dram_init(void)
 		do_reset(NULL,0,0,NULL);
 	}
 
+	/* Let's try to find a match with the current settings */
+	for ( i = 0; i < ddr_asize ; i++ ) {
+		if (lpddr4_array[i].id == ddr_info_mrr) {
+			ddr_info = ddr_info_mrr;
+			reset_required = 1;
+			break;
+		}
+	}
+
 	printf("DDRINFO(M): mr5-8 [ 0x%x ]\n", ddr_info_mrr);
 	printf("DDRINFO(%s): mr5-8 [ 0x%x ]\n", (ddr_found ? "E" : "T" ), ddr_info);
 
@@ -183,6 +193,11 @@ void spl_dram_init(void)
 			printf("DDRINFO(EEPROM): make sure that the eeprom is accessible\n");
 			printf("DDRINFO(EEPROM): i2c dev 1; i2c md 0x51 0x40 0x50\n");
 		}
+		if (reset_required) {
+			printf("DDRINFO(!): Reset after a fast ddr discovery\n");
+			do_reset(NULL,0,0,NULL);
+		}
+
 	}
 
 	/* Pass the dram size to th U-Boot through the tcm memory */
-- 
1.9.1

